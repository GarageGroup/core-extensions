name: .NET

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x' 

     # Add NuGet Sources

    - name: Create Local NuGet Directory
      run: mkdir ~/nuget

    - name: Add Local Nuget Source
      run: dotnet nuget add source ~/nuget

    - name: Add GarageGroup NuGet Source
      run: >
        dotnet nuget add source ${{ vars.GG_NUGET_SOURCE_URL }}
        -n garage
        -u ${{ secrets.GG_NUGET_SOURCE_USER_NAME }}
        -p ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --store-password-in-clear-text

    # AsyncPipeline.Extensions

    - name: Restore AsyncPipeline.Extensions
      run: dotnet restore ./src/*/*/AsyncPipeline.Extensions.csproj

    - name: Build AsyncPipeline.Extensions
      run: dotnet build ./src/*/*/AsyncPipeline.Extensions.csproj --no-restore  -c Release

    - name: Pack AsyncPipeline.Extensions
      run: dotnet pack ./src/*/*/AsyncPipeline.Extensions.csproj --no-restore -o ~/nuget  -c Release

    # AsyncPipeline.Extensions.Test

    - name: Restore AsyncPipeline.Extensions.Test
      run: dotnet restore ./src/*/*/AsyncPipeline.Extensions.Test.csproj

    - name: Test AsyncPipeline.Extensions.Test
      run: dotnet test ./src/*/*/AsyncPipeline.Extensions.Test.csproj --no-restore  -c Release

    # String.Extensions

    - name: Restore String.Extensions
      run: dotnet restore ./src/*/*/String.Extensions.csproj

    - name: Build String.Extensions
      run: dotnet build ./src/*/*/String.Extensions.csproj --no-restore  -c Release

    - name: Pack String.Extensions
      run: dotnet pack ./src/*/*/String.Extensions.csproj --no-restore -o ~/nuget  -c Release

    # String.Extensions.Test

    - name: Restore String.Extensions.Test
      run: dotnet restore ./src/*/*/String.Extensions.Test.csproj

    - name: Test String.Extensions.Test
      run: dotnet test ./src/*/*/String.Extensions.Test.csproj --no-restore  -c Release

    # FlatArray.Extensions

    - name: Restore FlatArray.Extensions
      run: dotnet restore ./src/*/*/FlatArray.Extensions.csproj

    - name: Build FlatArray.Extensions
      run: dotnet build ./src/*/*/FlatArray.Extensions.csproj --no-restore  -c Release

    - name: Pack FlatArray.Extensions
      run: dotnet pack ./src/*/*/FlatArray.Extensions.csproj --no-restore -o ~/nuget  -c Release

    # FlatArray.Extensions.Test

    - name: Restore FlatArray.Extensions.Test
      run: dotnet restore ./src/*/*/FlatArray.Extensions.Test.csproj

    - name: Test FlatArray.Extensions.Test
      run: dotnet test ./src/*/*/FlatArray.Extensions.Test.csproj --no-restore  -c Release

    # Push

    - name: Push Packages
      if: ${{ github.ref == 'refs/heads/main' }}
      run: >
        dotnet nuget push "../../../nuget/*.nupkg"
        -s ${{ vars.GG_NUGET_SOURCE_URL }}
        -k ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --skip-duplicate
